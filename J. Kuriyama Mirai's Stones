#include<bits/stdc++.h>
/*
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
 *
using namespace __gnu_pbds;
using namespace std;
 
typedef tree<int, null_type,greater_equal<int>, rb_tree_tag, tree_order_statistics_node_update> orderedSet;
 */
// less = set ordered from less    oredered_of_key(x) => no. of ele smaller than x
// less_equal = multiset ordered from less
//greater = set ordered from greater    oredered_of_key(x) => no. of ele bigger than x
//greater_equal = multiset  ordered from greater
#define ONE_PEICE_3MK ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#include <iostream>
#include <map>
#include <algorithm>
#include <vector>
#include <stack>
#include <queue>
#define el cout << endl
#define ll long long
#define ull unsigned long long
#define yes cout << "YES"
#define no cout << "NO"
#define print cout <<
using namespace std;
void JUDGE_MOTHER_FATHER()
{
#ifndef ONLINE_JUDGE
    freopen("Input.txt","r",stdin);
    freopen("Output.txt","w",stdout);
#endif
 
}
int freq[200001]={0};
//vector<vector<int>>ar(100001,vector<int>(100001,0));
long long ar[100001];
long long pre[100001]={0};
long long pre2[100001]={0};
int main()
{
    JUDGE_MOTHER_FATHER();
    ONE_PEICE_3MK
    int t = 1;
  //   cin >> t;
    while (t--)
    {
        int n;
        cin>>n;
        for (long long i=1;i<=n;i++)
        {
            cin>>ar[i];
         //   ar[i]+=ar[i-1];
            pre[i]=pre[i-1]+ar[i];
        }
        sort(ar+1,ar+n+1);
        for(long long i=1;i<=n;i++)
        {
            pre2[i]=pre2[i-1]+ar[i];
        }
        int q;cin>>q;
        while (q--)
        {
            int type;
            cin>>type;
            if(type==1)
            {
                int l,r;
                cin>>l>>r;
                cout<<pre[r]-pre[l-1];el;
            }else
            {
                int l,r;cin>>l>>r;
                cout<<pre2[r]-pre2[l-1];el;
            }
        }
 
    }
}
